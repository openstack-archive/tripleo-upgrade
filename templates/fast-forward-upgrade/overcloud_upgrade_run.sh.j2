#!/bin/env bash
#
# Run major upgrade on overcloud nodes
#
set -euo pipefail

{% if l3_agent_connectivity_check|bool %}
if [[ -e {{ working_dir }}/l3_agent_start_ping.sh ]]; then
    source {{ overcloud_rc }}
    bash {{ working_dir }}/l3_agent_start_ping.sh
fi
{% endif %}

{% if l3_agent_failover_check|bool %}
if [[ -e {{ working_dir }}/l3_agent_failover_pre.sh ]]; then
    source {{ overcloud_rc }}
    bash {{ working_dir }}/l3_agent_failover_pre.sh
fi
{% endif %}

{% if fip_http_check|bool %}
source {{ overcloud_rc }}
kill -9 $( lsof -t {{ working_dir }}/fip_http_check_start.sh ) || :
bash {{ working_dir }}/fip_http_check_start.sh &
{% endif %}

source {{ undercloud_rc }}

{% if stop_services and not fast_and_furious -%}

echo "[$(date)] Started upgrade stop services for {{ hosts }}"

openstack overcloud external-upgrade run --yes \
        --stack {{ overcloud_stack_name }} \
        --tags system_upgrade_stop_services 2>&1

echo "[$(date)] Finished upgrade stop services for {{ hosts }}"
{% endif -%}

echo "[$(date)] Running major upgrade for {{ hosts }} hosts"

openstack overcloud upgrade run --yes \
        --stack {{ overcloud_stack_name }} \
        {% if tripleo_upgrade_debug|bool %}
        --debug \
        {% endif -%}
        --limit {{ hosts }} --playbook all 2>&1

echo "[$(date)] Finished major upgrade for {{ hosts }} hosts"

{% if l3_agent_connectivity_check|bool %}
if [[ -e {{ working_dir }}/l3_agent_stop_ping.sh ]]; then
    source {{ overcloud_rc }}
    bash {{ working_dir }}/l3_agent_stop_ping.sh
fi
{% endif %}

{% if l3_agent_failover_check|bool %}
if [[ -e {{ working_dir }}/l3_agent_failover_post.sh ]]; then
    source {{ overcloud_rc }}
    bash {{ working_dir }}/l3_agent_failover_post.sh
fi
{% endif %}

{% if fip_http_check|bool %}
source {{ overcloud_rc }}
kill -9 $( lsof -t {{ working_dir }}/fip_http_check_start.sh )
bash {{ working_dir }}/fip_http_check_stop.sh
{% endif %}
{% if launch_sanity_workload|bool %}
bash {{ working_dir }}/workload_launch.sh 'sanity'
{% endif %}
