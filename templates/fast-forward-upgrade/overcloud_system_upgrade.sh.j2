#!/bin/env bash
#
# Run overcloud Operating System upgrade on overcloud node {{ hosts }}
#
set -euo pipefail

source {{ undercloud_rc }}

{% if fast_and_furious -%}
if [ ! -f .system_upgrade_stop_services ]; then

echo "[$(date)] Started system_upgrade_stop_services for {{ hosts }}"

openstack overcloud external-upgrade run --yes \
        --stack {{ overcloud_stack_name }} \
        --tags system_upgrade_stop_services 2>&1 && touch .system_upgrade_stop_services

if [ $? -ne 0 ]; then
    echo "[$(date)] Failed upgrade system_upgrade_stop_services for {{ hosts }}"
    exit 1
else
    echo "[$(date)] Finished upgrade system_upgrade_stop_services for {{ hosts }}"
fi

fi

echo "[$(date)] Started system upgrade step for {{ hosts }}"
  openstack overcloud upgrade run --yes \
          --stack {{ overcloud_stack_name }} \
          --tags system_upgrade \
          --limit "{{ hosts }}" 2>&1 | tee -a "RHEL_upgrade_{{ hosts }}"

if [ $? -ne 0 ]; then
    echo "[$(date)] Failed in system upgrade step for {{ hosts }}"
    exit 1
else
    echo "[$(date)] Finished system upgrade step for {{ hosts }}"
fi

{% else -%}

RUN_ANSWER=""
if openstack overcloud upgrade run --help | grep -qe "--yes"; then
    RUN_ANSWER="--yes"
fi

echo "[$(date)] Started system upgrade step for {{ hosts }}"

bkg_pids=""
for host in $(echo "{{ hosts }}" | sed "s/,/ /g")
do
  openstack overcloud upgrade run ${RUN_ANSWER} \
          --stack {{ overcloud_stack_name }} \
          --tags system_upgrade \
          --limit "${host}" 2>&1 | tee -a "RHEL_upgrade_${host}" &
  bkg_pids+=" $! "
done

status=0
for p in $bkg_pids; do
    if ! wait $p; then
        status=1
    fi
done

if [[ $status == 0 ]]; then
    echo "[$(date)] Finished system upgrade step for {{ hosts }}"
else
    echo "[$(date)] Failed in system upgrade step for {{ hosts }}"
    exit 1
fi
{% endif -%}
