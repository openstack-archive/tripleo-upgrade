---
- name: add OsloMessagingRpc and OsloMessagingNotify services
  replace:
    path: "{{ roles_data }}"
    regexp: '(\s+)(- OS::TripleO::Services::RabbitMQ$)'
    replace: '\1\2\1- {{ item }}'
  loop:
    - "OS::TripleO::Services::OsloMessagingRpc"
    - "OS::TripleO::Services::OsloMessagingNotify"

- name: drop RabbiMQ service
  replace:
    dest: "{{ roles_data }}"
    regexp: '(\s+)(- OS::TripleO::Services::RabbitMQ$)'
    replace: ''

- name: Replace Fluentd for Rsyslog service
  replace:
    path: "{{ roles_data }}"
    regexp: '(\s+)(- OS::TripleO::Services::Fluentd$)'
    replace: '\1- OS::TripleO::Services::Rsyslog'

- name: Replace SensuClient for Collectd service
  replace:
    path: "{{ roles_data }}"
    regexp: '(\s+)(- OS::TripleO::Services::SensuClient$)'
    replace: '\1- OS::TripleO::Services::Collectd'


- name: add ContainerImagePrepare service
  replace:
    path: "{{ roles_data }}"
    regexp: '(\s+)(- OS::TripleO::Services::HAproxy$)'
    replace: '\1\2\1- OS::TripleO::Services::ContainerImagePrepare'

- name: drop deprecated telemetry services
  replace:
    dest: "{{ roles_data }}"
    regexp: '(\s+)(- OS::TripleO::Services::{{ item }}$)'
    replace: ''
  loop:
    - CeilometerApi
    - CeilometerCollector
    - CeilometerExpirer

- name: drop MongDB service
  replace:
    dest: "{{ roles_data }}"
    regexp: '(\s+)(- OS::TripleO::Services::MongoDb$)'
    replace: ''

# By default we have update_serial either unset at all for OSP13 and OSP14 or
# we have it set where Pacemaker enabled nodes, CephOSD nodes and Networkers
# have it set to 1. This is mostly defensive precaution and we do allow running
# in parallel for CephOSD and Networkers for production systems that did enough
# testing on preprod or can take small outage. We should also parallelize it in
# CI as we just waste time here.
#
# save roles_data
# remove all update_serial
# add update_serial: 25
# set update_serial to 1 on roles with OS::TripleO::Services::Pacemaker
# write new roles_data

- name: copy roles_data in a variable
  command: "cat {{ roles_data }}"
  register: roles_data_yaml

- name: save roles_data into json file
  copy:
    content: "{{ roles_data_yaml.stdout | from_yaml | to_nice_json }}"
    dest: "{{ roles_data }}.json"

- name: Ensure we set update_serial in roles data
  shell: |
    set -o pipefail
    if grep -q OS::TripleO::Services::Pacemaker "{{ roles_data }}.json"; then
    cat {{ roles_data }}.json |\
    jq 'del(.[] | .update_serial ) |
        map(. |= (. += {update_serial: 25} )) |
        map( if .ServicesDefault | contains (["OS::TripleO::Services::Pacemaker"]) then . += {update_serial: 1} else . += {update_serial: 25} end )'
    exit 2
    else
        echo "No service defined, not modifying the role file"
    fi
  register: modified_roles_data
  failed_when: modified_roles_data.rc not in [0,2]
  changed_when: modified_roles_data.rc == 2

- name: "Dump the modified roles_data into {{ roles_data }}"
  copy:
    content: "{{ modified_roles_data.stdout | from_json | to_nice_yaml(indent=2) | trim}}"
    dest: "{{ roles_data }}"
  when: modified_roles_data.rc == 2
