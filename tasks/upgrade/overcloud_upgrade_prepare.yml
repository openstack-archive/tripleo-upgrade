---
- name: adjust role-data for upgrade
  include_tasks: ../common/adjust-roles-data.yaml
  when: custom_roles_used|bool

- name: check customized {{ uc_containers_prepare_file }} exists
  stat:
    path: "{{ working_dir }}/{{ uc_containers_prepare_file }}"
  register: custom_uc_containers

- name: Set the neutron_driver to ovn for the Overcloud upgrade if deployed with OVN
  replace:
    path: "{{ working_dir }}/{{ uc_containers_prepare_file }}"
    regexp: '^(\s*neutron_driver\s*:)(.*)'
    replace: '\1 ovn'
  when:
    - custom_uc_containers.stat.exists
    - deployment_with_ovn


- name: setup HEAT outputs via upgrade prepare
  shell: |
    set -o pipefail
    {{ overcloud_upgrade_prepare_script }} 2>&1 {{ timestamper_cmd }} >> \
        overcloud_upgrade_prepare.log
  args:
    chdir: "{{ working_dir }}"
    executable: /usr/bin/bash
  register: overcloud_upgrade_prepare
  ignore_errors: true

- block:
    - name: print stack failures
      shell: |
        set -o pipefail
        source {{ undercloud_rc }}
        openstack stack failures list --long {{ overcloud_stack_name }} 2>&1 {{ timestamper_cmd }} | \
        tee -a overcloud_failed_upgrade_prepare.log
      args:
        chdir: "{{ working_dir }}"
        executable: /usr/bin/bash

    - name: print resource list
      shell: |
        set -o pipefail
        source {{ undercloud_rc }}
        openstack stack resource list --filter status=FAILED --nested-depth 5 {{ overcloud_stack_name }} \
        2>&1 {{ timestamper_cmd }} | tee -a overcloud_failed_prepare_resources.log
      args:
        chdir: "{{ working_dir }}"
        executable: /usr/bin/bash

    - name: was the overcloud upgrade preparation successful.
      fail: msg="Overcloud upgrade preparation step failed... :("
  when: overcloud_upgrade_prepare.rc != 0
