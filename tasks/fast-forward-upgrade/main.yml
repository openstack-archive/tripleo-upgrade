---
- name: create Undercloud ffu prepare scripts
  include_tasks: create-undercloud-ffu-scripts.yaml
  tags: create_ffu_prepare_scripts
  when: >
      ffu_noop|bool or
      ffu_undercloud_upgrade|bool or
      ffu_undercloud_os_upgrade|bool

- block:
    - name: apply pre FFU undercloud OS upgrade workarounds
      shell: |
        set -o pipefail
        bash pre_ffu_undercloud_os_upgrade_workarounds.sh 2>&1 {{ timestamper_cmd }} > pre_ffu_undercloud_os_upgrade_workarounds.log
      args:
        chdir: "{{ working_dir }}"
      when: ffu_upgrade_workarounds|bool

    - name: Clean up httpd folder
      become: true
      become_user: root
      file:
        path: /etc/httpd
        state: absent

    - name: Upgrade operating system
      become: true
      become_user: root
      import_tasks: ../common/undercloud_os_upgrade.yaml
      when: not use_oooq|bool

    - name: apply post FFU undercloud OS upgrade workarounds
      shell: |
        set -o pipefail
        bash post_ffu_undercloud_os_upgrade_workarounds.sh 2>&1 {{ timestamper_cmd }} > post_ffu_undercloud_os_upgrade_workarounds.log
      args:
        chdir: "{{ working_dir }}"
      when: ffu_upgrade_workarounds|bool

  when: ffu_undercloud_os_upgrade|bool
  tags: ffu_undercloud_os_upgrade

- block:
    - name: apply pre ffu undercloud upgrade workarounds
      shell: |
        set -o pipefail
        bash pre_ffu_undercloud_upgrade_workarounds.sh 2>&1 {{ timestamper_cmd }} > pre_ffu_undercloud_upgrade_workarounds.log
      args:
        chdir: "{{ working_dir }}"
      when: ffu_upgrade_workarounds|bool

    - name: configure container specific parameters
      import_tasks: ../common/configure_uc_containers.yml

    - name: install/update required packages before upgrading the undercloud
      become: true
      become_user: root
      import_tasks: ../common/undercloud_prerequisites.yaml

    - name: ffu undercloud upgrade
      shell: |
        set -o pipefail
        bash {{ working_dir }}/ffu_undercloud_upgrade.sh 2>&1 {{ timestamper_cmd }} > ffu_undercloud_upgrade.log
      args:
        chdir: "{{ working_dir }}"

    - name: apply post ffu undercloud upgrade workarounds
      shell: |
        set -o pipefail
        bash post_ffu_undercloud_upgrade_workarounds.sh 2>&1 {{ timestamper_cmd }} > post_ffu_undercloud_upgrade_workarounds.log
      args:
        chdir: "{{ working_dir }}"
      when: ffu_upgrade_workarounds|bool
  when: ffu_undercloud_upgrade|bool

- name: create overcloud FFU prepare scripts
  include_tasks: create-overcloud-ffu-scripts.yaml
  args:
    apply:
      tags:
        - create_ffu_prepare_scripts
  tags: create_ffu_prepare_scripts
  when: >
      ffu_noop|bool or
      ffu_overcloud_upgrade|bool

- block:
    - name: Ensure ansible-pacemaker module is present in CI.
      package:
        name: ansible-pacemaker
        state: latest
      when: tripleo_ci|default(false)|bool
      tags: ffu_upgrade_playbook
      become: true

    - name: start L3 verification scripts
      include_tasks: "{{ item }}"
      args:
        apply:
          tags: ffu_overcloud_prepare
      loop:
        - '../common/l3_agent_connectivity_check_start_script.yml'
        - '../common/l3_agent_failover_check_pre_script.yml'
      tags: ffu_overcloud_prepare

    - name: apply pre ffu overcloud prepare workarounds
      shell: |
        set -o pipefail
        bash pre_ffu_overcloud_upgrade_prepare_workarounds.sh 2>&1 {{ timestamper_cmd }} > pre_ffu_overcloud_upgrade_prepare_workarounds.log
      args:
        chdir: "{{ working_dir }}"
      when: ffu_upgrade_workarounds|bool
      tags: ffu_overcloud_prepare

    - name: convert nic templates
      import_tasks: ../common/convert_nic_templates.yaml
      tags: ffu_overcloud_prepare

    - name: convert tls templates
      import_tasks: convert_tls_templates.yaml
      tags: ffu_overcloud_prepare

    - name: run overcloud upgrade prepare
      import_tasks: ../upgrade/overcloud_upgrade_prepare.yml
      tags: ffu_overcloud_prepare

    - name: apply post ffu overcloud prepare workarounds
      shell: |
        set -o pipefail
        bash post_ffu_overcloud_upgrade_prepare_workarounds.sh 2>&1 {{ timestamper_cmd }} > post_ffu_overcloud_upgrade_prepare_workarounds.log
      args:
        chdir: "{{ working_dir }}"
      when: ffu_upgrade_workarounds|bool
      tags: ffu_overcloud_prepare

    - name: prepare containers for overcloud upgrade
      args:
        chdir: "{{ working_dir }}"
      shell: |
        set -o pipefail
        bash overcloud_prepare_containers.sh {{ timestamper_cmd }} > overcloud_upgrade_prepare_containers.log
      tags: overcloud_upgrade_prepare_containers

    - name: stop L3 verification scripts
      include_tasks: "{{ item }}"
      args:
        apply:
          tags: ffu_overcloud_prepare
      loop:
        - '../common/l3_agent_connectivity_check_stop_script.yml'
        - '../common/l3_agent_failover_check_post_script.yml'
      tags: ffu_overcloud_prepare

    - name: start L3 connectivity script
      import_tasks: ../common/l3_agent_connectivity_check_start_script.yml
      tags: ffu_overcloud_run

    ############## OS upgrade + Overcloud node upgrade run ##############
    - name: Start overcloud upgrade run for all roles.
      import_tasks: overcloud_upgrade_roles.yaml
      tags: ffu_overcloud_run

    - name: stop L3 connectivity script
      import_tasks: ../common/l3_agent_connectivity_check_stop_script.yml
      tags: ffu_overcloud_run

    # TODO(jfrancoa): We might need to do something like this to make the job quicker.
    # we can either upgrade all overcloud nodes at one or per role/node
    # - name: upgrade all overcloud nodes at once
    #   include_tasks: overcloud_bulk.yaml
    #   args:
    #     apply:
    #       tags: ffu_overcloud_upgrade_bulk
    #   tags: ffu_overcloud_upgrade_bulk
    #   when: ffu_bulk|bool

    ################ UPGRADE CONVERGE ###############
    - name: apply pre ffu overcloud converge workarounds
      shell: |
        set -o pipefail
        bash pre_ffu_overcloud_converge_workarounds.sh 2>&1 {{ timestamper_cmd }} > pre_ffu_overcloud_converge_workarounds.log
      args:
        chdir: "{{ working_dir }}"
      when: ffu_upgrade_workarounds|bool
      tags: ffu_overcloud_converge

    - name: import overcloud upgrade converge tasks
      import_tasks: ../upgrade/overcloud_upgrade_converge.yml
      tags: ffu_overcloud_converge

    - name: apply post ffu overcloud converge workarounds
      shell: |
        set -o pipefail
        bash post_ffu_overcloud_converge_workarounds.sh 2>&1 {{ timestamper_cmd }} > post_ffu_overcloud_converge_workarounds.log
      args:
        chdir: "{{ working_dir }}"
      when: ffu_upgrade_workarounds|bool
      tags: ffu_overcloud_converge

    ############## CEPH upgrade ######################
    - when: ceph_osd_enabled|bool
      block:
        - name: apply pre ffu ceph upgrade workarounds
          shell: |
            set -o pipefail
            bash pre_ffu_overcloud_ceph_workarounds.sh 2>&1 {{ timestamper_cmd }} > pre_ffu_overcloud_ceph_workarounds.log
          args:
            chdir: "{{ working_dir }}"
          when: ffu_upgrade_workarounds|bool
          tags: ffu_overcloud_ceph

        - name: run FFU ceph osd nodes upgrade scripts
          include_tasks: ../upgrade/ceph_upgrade_run.yml
          tags: ffu_overcloud_ceph

        - name: start L3 connectivity script
          import_tasks: ../common/l3_agent_connectivity_check_start_script.yml
          tags: ffu_overcloud_ceph

        - name: import ceph ugrade tasks
          import_tasks: ../upgrade/ceph_upgrade_run.yml
          tags: ffu_overcloud_ceph

        - name: apply post ffu ceph upgrade workarounds
          shell: |
            set -o pipefail
            bash post_ffu_overcloud_ceph_workarounds.sh 2>&1 {{ timestamper_cmd }} > post_ffu_overcloud_ceph_workarounds.log
          args:
            chdir: "{{ working_dir }}"
          when: ffu_upgrade_workarounds|bool
          tags: ffu_overcloud_ceph

        - name: stop L3 verification scripts
          include_tasks: "{{ item }}"
          args:
            apply:
              tags: ffu_overcloud_ceph
          loop:
            - '../common/l3_agent_connectivity_check_stop_script.yml'
            - '../common/l3_agent_failover_check_post_script.yml'
          tags: ffu_overcloud_ceph

    ############## POST UPGRADE ##############
    - name: run controller post upgrade steps
      include_tasks: ../upgrade/controller_post_upgrade.yml
      args:
        apply:
          tags:
            - controller_post_upgrade
      tags: controller_post_upgrade
      when: controller_upgrade_post|bool

    - name: run post upgrade nova actions
      import_tasks: ../common/nova_actions_check.yml
      tags: ffu_overcloud_post

  when: ffu_overcloud_upgrade|bool
