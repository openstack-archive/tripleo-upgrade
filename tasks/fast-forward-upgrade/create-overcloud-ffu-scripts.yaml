---
- name: create a compatible deployment scripts from oooq
  include_tasks: ../upgrade/use_oooq.yaml
  args:
    apply:
      tags: use_oooq
  tags: use_oooq
  when: use_oooq|bool

- name: make a copy of the initial overcloud deploy script
  copy:
    remote_src: true
    src: "{{ overcloud_deploy_script }}"
    dest: "{{ overcloud_deploy_script }}.orig.sh"

- name: Convert CLI options to parameters
  import_tasks: ../common/convert_cli_opts_params.yaml

- name: get auxiliary facts for upgrade
  import_tasks: ../common/auxilary-facts.yaml

- name: generate roles list from inventory file
  import_tasks: ../common/load_roles_from_inventory.yaml

- name: create ffu upgrade workaround scripts
  template:
    src: workarounds.sh.j2
    dest: "{{ working_dir }}/{{ item }}.sh"
    mode: 0775
    force: true
  loop:
    - 'pre_ffu_overcloud_upgrade_prepare_workarounds'
    - 'post_ffu_overcloud_upgrade_prepare_workarounds'
    - 'pre_ffu_overcloud_os_upgrade_workarounds'
    - 'post_ffu_overcloud_os_upgrade_workarounds'
    - 'pre_ffu_overcloud_upgrade_workarounds'
    - 'post_ffu_overcloud_upgrade_workarounds'
    - 'pre_ffu_overcloud_converge_workarounds'
    - 'post_ffu_overcloud_converge_workarounds'
    - 'pre_ffu_overcloud_ceph_workarounds'
    - 'post_ffu_overcloud_ceph_workarounds'
  when: ffu_upgrade_workarounds

- name: create the custom upgrade init commands
  template:
    src: "upgrade_init_command.yaml.j2"
    dest: "{{ upgrade_init_command_dest }}"
    mode: 0775
  when: upgrade_init_command is string

- name: create overcloud_prepare_containers.sh script
  template:
    src: overcloud_prepare_containers.sh.j2
    dest: "{{ working_dir }}/overcloud_prepare_containers.sh"
    mode: 0755
    force: true

- set_fact:
    pcs_upgrade_hosts: ""
    pcs_present: true

- name: create pacemaker based overcloud system upgrade script for {{ item }}
  include_tasks: create-overcloud-ffu-hosts-scripts.yaml
  # The below filter chain does the following:
  # - Get the list of roles present in the pacemaker group, eg: ["ControllerOpenstack", "Database"]
  # - Get the list of hosts in each role into an array
  # - Sort the resulting list of hosts for each role
  # - Return a list of host lists. eg: [['ctrl-1', 'ctrl2', 'ctrl-3'], ['DB1']]
  # - Then with_together does a zip_longest to combine the list of lists,
  #   using None to fill the gaps. eg: [ctrl-1, DB1, ctrl2, None, ctrl-3, None]
  with_together: >
    {{ oc_roles_hosts|dict2items |
       selectattr('key', 'in', inventory_rolemap['pacemaker']) |
       map(attribute='value') | map('sort') | list }}

- set_fact:
    pcs_upgrade_hosts: ""
    pcs_present: false

- name: create non-pacemaker and non-compute based overcloud system upgrade script for {{ item }}
  include_tasks: create-overcloud-ffu-hosts-scripts.yaml
  # The below filter chain does the following:
  # - Get the list of roles NOT present in the pacemaker and nova_compute groups
  # - Get the list of hosts in each role into an array
  # - Sort the resulting list of hosts for each role
  # - Return a list of host lists
  # - Then with_together does a zip_longest to combine the list of lists,
  #   using None to fill the gaps.
  with_together: >
    {{ oc_roles_hosts|dict2items |
       rejectattr('key', 'in', inventory_rolemap['pacemaker']) |
       rejectattr('key', 'in', inventory_rolemap['nova_compute']) |
       map(attribute='value') | map('sort') | list }}

- name: create compute based overcloud system upgrade script for {{ item }}
  include_tasks: create-overcloud-ffu-hosts-scripts.yaml
  # The below filter chain does the following:
  # - Get the list of roles present in the nova_compute group
  # - Get the list of hosts in each role into an array
  # - Sort the resulting list of hosts for each role
  # - Return a list of host lists
  # - Then with_together does a zip_longest to combine the list of lists,
  #   using None to fill the gaps.
  with_together: >
    {{ oc_roles_hosts|dict2items |
       selectattr('key', 'in', inventory_rolemap['nova_compute']) |
       map(attribute='value') | map('sort') | list }}

- name: create online data migration script
  template:
    src: "overcloud_online_data_migration.sh.j2"
    dest: "{{ working_dir }}/overcloud_online_data_migration.sh"
    mode: 0755
    force: true

- name: create overcloud converge script
  vars:
    old_img: "{{ working_dir }}/{{ container_registry_file }}"
  template:
    src: "overcloud_upgrade_converge.sh.j2"
    dest: "{{ working_dir }}/overcloud_upgrade_converge.sh"
    mode: 0775
    force: true

- name: create ceph upgrade script
  template:
    src: "ceph-upgrade-run.sh.j2"
    dest: "{{ working_dir }}/ceph-upgrade-run.sh"
    mode: 0755

- name: import ssh_config_skip_host tasks
  import_tasks: ../common/ssh_config_skip_host.yml

- name: Create post upgrade scripts for controller nodes
  import_tasks: ../common/controller_post_scripts.yml

- name: import create_l3_agent_connectivity_check_script tasks
  import_tasks: ../common/create_l3_agent_connectivity_check_script.yml

- name: import create_l3_agent_failover_check_script tasks
  import_tasks: ../common/create_l3_agent_failover_check_script.yml

- name: create nova actions check script
  import_tasks: ../common/create_nova_actions_check_script.yml

- name: import create HTTP test scripts
  import_tasks: ../common/create_http_test_scripts.yml
