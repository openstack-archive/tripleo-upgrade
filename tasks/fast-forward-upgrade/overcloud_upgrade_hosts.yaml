---
######## RHEL system upgrade ########
- name: apply pre ffu overcloud system upgrade workarounds in {{ host }}
  shell: |
    set -o pipefail
    bash {{ working_dir }}/pre_ffu_overcloud_os_upgrade_workarounds.sh \
      --limit {{ host}} 2>&1 {{ timestamper_cmd }} > pre_ffu_overcloud_os_upgrade_workarounds_{{ host }}.log
  args:
    chdir: "{{ working_dir }}"
  when: ffu_upgrade_workarounds
  tags: ffu_overcloud_system_upgrade

- name: run the pre upgrade script for the host {{ host }}
  when: compute_present|bool
  shell: |
    set -o pipefail
    bash {{working_dir}}/{{ host }}_upgrade_pre.sh 2>&1 {{ timestamper_cmd }} > \
        {{ working_dir }}/{{ host }}_upgrade_pre.log
  tags: ffu_overcloud_system_upgrade

- name: run the RHEL upgrade steps for the host {{ host }}
  shell: |
    set -o pipefail
    bash {{ overcloud_system_upgrade_script_base }}-{{ host }}.sh 2>&1 {{ timestamper_cmd }} >> \
        {{ working_dir }}/overcloud_system_upgrade_{{ host }}.log
  register: overcloud_system_upgrade_res
  ignore_errors: true
  tags: ffu_overcloud_system_upgrade

- name: was the RHEL upgrade step successful.
  fail: msg="Overcloud Operating System upgrade failed in {{ host }}."
  when: overcloud_system_upgrade_res.rc != 0
  tags: ffu_overcloud_system_upgrade

- name: apply post ffu overcloud system upgrade workarounds in {{ host }}
  shell: |
    set -o pipefail
    bash {{ working_dir }}/post_ffu_overcloud_os_upgrade_workarounds.sh \
      --limit {{ host}} 2>&1 {{ timestamper_cmd }} > post_ffu_overcloud_os_upgrade_workarounds_{{ host }}.log
  args:
    chdir: "{{ working_dir }}"
  when: ffu_upgrade_workarounds
  tags: ffu_overcloud_system_upgrade

######## check overcloud is up up after system upgrade ########
- name: check {{ host }} is up after boot
  wait_for_connection:
    delay: 30
    sleep: 30
    timeout: 600

######## overcloud upgrade run ########
- name: apply pre ffu overcloud upgrade workarounds in {{ host }}
  shell: |
    set -o pipefail
    bash {{ working_dir }}/pre_ffu_overcloud_upgrade_workarounds.sh \
      --limit {{ host}} 2>&1 {{ timestamper_cmd }} > pre_ffu_overcloud_upgrade_workarounds_{{ host }}.log
  args:
    chdir: "{{ working_dir }}"
  when: ffu_upgrade_workarounds
  tags: ffu_overcloud_upgrade_run

# HACK for ffwd upgrade
- set_fact:
    upgrade_host: "{{ host + ',' + pcs_host }}"
- set_fact:
    pcs_host: "{{ upgrade_host | regex_replace(',$', '') }}"

- name: run overcloud major upgrade for the host {{ pcs_host if pcs_present else host }}
  shell: |
    set -o pipefail
    bash {{ overcloud_upgrade_run_script_base }}-{{ pcs_host if pcs_present else host }}.sh 2>&1 {{ timestamper_cmd }} >> \
        {{ working_dir }}/overcloud_upgrade_run_{{ pcs_host if pcs_present else host }}.log
  register: overcloud_upgrade_res
  ignore_errors: true
  tags: ffu_overcloud_upgrade_run

- name: was the overcloud upgrade composable step successful.
  fail: msg="Overcloud upgrade composable step failed for {{ host }}... :("
  when: overcloud_upgrade_res.rc != 0
  tags: ffu_overcloud_upgrade_run

- name: apply post ffu overcloud upgrade workarounds in {{ host }}
  shell: |
    set -o pipefail
    bash {{ working_dir }}/post_ffu_overcloud_upgrade_workarounds.sh \
      --limit {{ host}} 2>&1 {{ timestamper_cmd }} > post_ffu_overcloud_upgrade_workarounds_{{ host }}.log
  args:
    chdir: "{{ working_dir }}"
  when: ffu_upgrade_workarounds
  tags: ffu_overcloud_upgrade_run
